name: Android CI/CD (Kotlin)

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java Development Kit (JDK) 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Step 3: Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      # Step 4: Generate Gradle Wrapper
      - name: Generate Gradle Wrapper
        run: |
          echo "Gradle wrapper banaya ja raha hai repository root mein..."
          gradle wrapper

      # Step 5: Verify SettingsActivity.kt content
      - name: Print SettingsActivity.kt content
        run: cat app/src/main/java/com/example/issuetracker/SettingsActivity.kt

      # Step 6: Build with Gradle Wrapper
      - name: Build with Gradle Wrapper
        run: ./gradlew clean assembleRelease

      # Step 7: Upload APK on release
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Trigger on push to main
        id: create_release # Add an ID to this step to access its outputs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}-${{ github.sha }} # Unique tag name using run number and commit SHA
          name: Release Build ${{ github.run_number }} - ${{ github.event.head_commit.message }} # More descriptive name
          body: |
            Automated release from CI/CD.
            Commit: ${{ github.sha }}
            Message: ${{ github.event.head_commit.message }}
            Timestamp: $(date +%Y-%m-%d %H:%M:%S)
          draft: false
          prerelease: false
          files: app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
